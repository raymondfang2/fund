{"version":3,"sources":["web3.js","factory.js","fund.js","pages/Welcome.js","pages/ContributeForm.js","pages/RequestForm.js","pages/FundDetail.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","instance","eth","Contract","FundFactory","abi","address","Fund","Welcome","state","charityOwner","funds","fundName","errorMessage","loading","onSubmit","event","a","preventDefault","setState","givenProvider","selectedAddress","currentAccount","console","log","factory","methods","raiseFund","send","from","message","location","reload","call","getFunds","this","items","map","link","header","description","to","fluid","Card","Group","Grid","padded","Row","Column","width","Form","error","Field","Input","value","onChange","target","Message","content","Button","primary","length","renderFunds","React","Component","ContributeForm","fund","props","contribute","RequestForm","recipient","createRequest","FundDetail","fundAddress","balance","numRequests","donatorsCount","manager","match","params","getSummary","summary","meta","style","overflowWrap","utils","fromWei","withRouter","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1741eeda.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\nconst  web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3\";\nimport FundFactory from \"./contracts/FundFactory.json\";\n\nconst instance = new web3.eth.Contract(\n  FundFactory.abi,\n  \"0x6969853dEEd9C3F1EeEC96188f8542d250C69665\"\n);\n//replace the above address with the output of \"truffle migrate ...\" --> the contract address of FundFactory\n//Only the account deployed the above factory can raise fund --> the charityOwner\nexport default instance;\n","import web3 from \"./web3\";\nimport Fund from \"./contracts/Fund.json\";\n\n\nexport default (address) => {\n    return new web3.eth.Contract(\n        Fund.abi,\n        address\n    );\n};\n","import React from \"react\";\n//Semantic UI\nimport { Card, Form, Grid, Button, Input, Message } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n//React-Route\nimport { Link} from 'react-router-dom'\n\nimport web3 from \"../web3\";\nimport factory from \"../factory\";\nimport fund from \"../fund\";\n\nclass Welcome extends React.Component {\n    //1. This is part of the constructor will be invoked when page launch index.js\n    state = {\n        charityOwner: '',\n        funds:[],\n        //For raising fund\n        fundName: '',\n        errorMessage: '',\n        loading: false\n    };\n\n\n\n    //3. This will be invoked after rendering\n    //state.manager changed\n    //4. state change will cause the re-render!\n    async componentDidMount() {\n        const charityOwner = await factory.methods.charityOwner().call();\n        const funds = await factory.methods.getFunds().call();\n        console.log(\"=====>\");\n        console.log(charityOwner);\n        this.setState({ charityOwner, funds });\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault(); //Not classical html way\n        this.setState({loading: true, errorMessage: ''});\n\n        try {\n            //const accounts = await web3.eth.getAccounts();\n            const currentAccount = await web3.givenProvider.selectedAddress;\n            console.log(\"<======\");\n            console.log(currentAccount);\n\n            await factory.methods.raiseFund(this.state.fundName).send({\n                //from: accounts[0]\n                from: currentAccount\n            });\n        } catch (err) {\n            this.setState({errorMessage: err.message});\n        }\n\n        this.setState({loading: false});\n        window.location.reload(); //refresh the page to show the new Fund raised!\n    }\n\n\n    renderFunds()  {\n        const items = this.state.funds.map((address)=> {\n            const link = \"/detail/\"+address;\n            return {\n                header: address,\n                description: <Link to={link}>View Fund Detail</Link>,\n                fluid: true\n            }\n        });\n        return <Card.Group items={items} />;\n    }\n\n\n\n\n    //2. render to be called\n    render() {\n        return (\n            <div >\n                <Grid padded>\n                    <Grid.Row>\n                        <Grid.Column width={10} >\n                            <h2>Raise a new Fund</h2>\n                            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                                <Form.Field>\n                                    <label>Fund Name:</label>\n                                    <Input\n                                        value={this.state.fundName}\n                                        onChange={(event)=> {\n                                            this.setState({fundName: event.target.value})\n                                        }}\n                                    />\n                                </Form.Field>\n                                <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                                <Button loading={this.state.loading} primary>Create!</Button>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width={6}> </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={10} >\n                            <h2>Fund List.</h2>\n\n                            <p>This contract is managed by {this.state.charityOwner}</p>\n                            <p>There are currently {this.state.funds.length} funds</p>\n                            <div>{this.renderFunds()}</div>\n                        </Grid.Column>\n                        <Grid.Column width={6}> </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </div>\n        );\n    }\n}\nexport default Welcome;\n","import React, { Component } from \"react\";\nimport {Form, Input, Message, Button} from \"semantic-ui-react\";\n\nimport web3 from \"../web3\";\nimport Fund from \"../fund\";\n\n\nclass ContributeForm extends  Component {\n    state = {\n        value: '',\n        errorMessage: '',\n        loading: false\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        const fund = Fund(this.props.address);\n        this.setState({loading: true, errorMessage: ''});\n        try {\n            console.log(\"=========> contribution...\");\n            //const accounts = await  web3.eth.getAccounts();\n            const currentAccount = await web3.givenProvider.selectedAddress;\n            console.log(\"=========>\");\n            console.log(currentAccount);\n            console.log(\"=========>\")\n            await  fund.methods.contribute().send({\n                from: currentAccount,\n                value: this.state.value\n            });\n            window.location.reload(); //refresh the current detail page -> show the donated amount inside\n        } catch (err) {\n            console.log(\"==============>\");\n            console.log(err.message);\n            this.setState({errorMessage: err.message});\n        }\n\n        this.setState({loading: false, value: ''});\n\n    }\n\n    render() {\n        return(\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                <Form.Field>\n                    <label>Amount to Contribute</label>\n                    <Input\n                        value={this.state.value}\n                        onChange={event=>this.setState({value: event.target.value})} />\n                </Form.Field>\n                <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                <Button primary loading={this.state.loading}>Contribute!</Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;\n","import React, {Component} from \"react\";\nimport { Form, Button, Message, Input } from \"semantic-ui-react\";\n\nimport web3 from \"../web3\";\nimport Fund from \"../fund\";\n\nclass RequestForm extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        recipient: \"\",\n        loading: false,\n        errorMessage: ''\n    };\n\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const fund = Fund(this.props.address);\n        const { description, value, recipient } = this.state;\n\n        this.setState({loading: true, errorMessage: ''});\n\n        try {\n            const currentAccount = await web3.givenProvider.selectedAddress;\n            await fund.methods\n                .createRequest(description, value, recipient)\n                .send({ from: currentAccount });\n\n            window.location.reload(); //refresh the current detail page -> show the donated amount inside\n        } catch (err) {\n            console.log(\"===========>\");\n            console.log(err.message);\n            this.setState({ errorMessage: err.message});\n        }\n\n        this.setState({loading: false});\n    };\n\n\n    render() {\n        return (\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label>Description</label>\n                        <Input\n                            value={this.state.description}\n                            onChange={(event) =>\n                                this.setState({ description: event.target.value })\n                            }\n                        />\n                    </Form.Field>\n\n                    <Form.Field>\n                        <label>Value</label>\n                        <Input\n                            value={this.state.value}\n                            onChange={(event) => this.setState({ value: event.target.value })}\n                        />\n                    </Form.Field>\n\n                    <Form.Field>\n                        <label>Recipient</label>\n                        <Input\n                            value={this.state.recipient}\n                            onChange={(event) =>\n                                this.setState({ recipient: event.target.value })\n                            }\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                    <Button primary loading={this.state.loading}>Create!</Button>\n                </Form>\n        )\n    }\n};\n\nexport default RequestForm;\n","import React from \"react\";\n//Semantic UI\nimport {Button, Card, Form, Grid, Input, Message} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n//React-Route\nimport { withRouter } from 'react-router-dom'\n\nimport web3 from \"../web3\";\nimport Fund from \"../fund\";\nimport ContributeForm from \"./ContributeForm\";\nimport RequestForm from \"./RequestForm\";\n\nclass FundDetail extends React.Component {\n    //1. This is part of the constructor will be invoked when page launch index.js\n    state = {\n        fundAddress: '',\n        fundName: '',\n        balance: '',\n        numRequests: '',\n        donatorsCount: '',\n        manager: ''\n    };\n\n\n\n    //3. This will be invoked after rendering\n    //state.manager changed\n    //4. state change will cause the re-render!\n    async componentDidMount() {\n        const fundAddress = this.props.match.params.fundAddress; //Passed from Welcome.js\n        this.setState({fundAddress});\n\n        const fund = Fund(fundAddress);\n\n        const summary = await fund.methods.getSummary().call();\n\n        console.log(\"=====>\");\n        console.log(summary[0]);\n\n        this.setState({\n            fundAddress: fundAddress,\n            fundName: summary[0],\n            balance: summary[1],\n            numRequests: summary[2],\n            donatorsCount: summary[3],\n            manager: summary[4]\n        })\n\n    }\n\n    renderFunds() {\n        const items = [{\n            header: this.state.fundName,\n            meta: \"Fund Name\",\n            description:\n                \"The name of this fund\",\n            style: { overflowWrap: \"break-word\" },\n        },\n            {\n            header: this.state.manager,\n            meta: \"Address of Manager\",\n            description:\n                \"The manager created this Fund and can create requests to withdraw money\",\n            style: { overflowWrap: \"break-word\" },\n        },\n            {\n                header: this.state.numRequests,\n                meta: \"Number of Requests\",\n                description:\n                    \"A request tries to withdraw money from the contract. Requests must be approved by donators\",\n            },\n            {\n                header: this.state.donatorsCount,\n                meta: \"Number of Donators\",\n                description:\n                    \"Number of people who have already donated to this fund\",\n            },\n            {\n                header: web3.utils.fromWei(this.state.balance, \"ether\"),\n                meta: \"Fund Balance (ether)\",\n                description:\n                    \"The balance is how much money this fund has left to spend.\",\n            },\n        ];\n\n        return <Card.Group items={items}/>;\n    }\n\n    //2. render to be called\n    render() {\n        return (\n            <div >\n                <Grid padded>\n                    <Grid.Row>\n                        <Grid.Column width={8} >\n                            <h2>Fund Detail</h2>\n                            <div>{this.renderFunds()}</div>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <h2>Donation</h2>\n                            <ContributeForm address={this.state.fundAddress}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={8} >\n                            <h2>Creat Request</h2>\n                            <RequestForm address={this.state.fundAddress}/>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <h2>Request List with Approval Below</h2>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </div>\n        );\n    }\n}\nexport default withRouter(FundDetail);\n\n\n","//React-Route\nimport React from \"react\";\nimport {Redirect, Route} from 'react-router-dom'\nimport Welcome from \"./pages/Welcome\";\nimport FundDetail from \"./pages/FundDetail\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n        <div >\n            <Route exact path=\"/\">\n                <Welcome/>\n            </Route>\n            <Route exact path=\"/fund\">\n                <Welcome/>\n            </Route>\n            <Route exact path=\"/detail/:fundAddress\">\n                    <FundDetail/>\n            </Route>\n\n\n        </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}